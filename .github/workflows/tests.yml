name: Tests and Security Audit

on:
  push:
    branches: [ main, master, dev, development ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      NEXTAUTH_SECRET: test_secret
      NEXTAUTH_URL: http://localhost:3000
      STRIPE_SECRET_KEY: test_key
      
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma client
        run: npx prisma generate
        
      - name: Run linter
        run: npm run lint
        
      - name: Run unit tests with coverage
        run: npm run test:coverage
        
      - name: Run API tests
        run: npm run test:api
        
      - name: Run security audit
        run: npm run security-audit
        
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
          
      - name: Upload security audit results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit
          path: security-audit.json
          
  performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Install autocannon and dotenv
        run: |
          npm install --save-dev autocannon
          npm install dotenv
          
      - name: Start application in background
        run: |
          npm run build
          npm run start &
          sleep 10 # Wait for the app to start
          
      - name: Run performance tests
        run: npm run performance-test
        
      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        with:
          name: performance-reports
          path: performance-reports/
          
  report:
    runs-on: ubuntu-latest
    needs: [test, performance]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download test coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage/
          
      - name: Download security audit results
        uses: actions/download-artifact@v3
        with:
          name: security-audit
          path: .
          
      - name: Download performance test results
        uses: actions/download-artifact@v3
        with:
          name: performance-reports
          path: performance-reports/
          
      - name: Generate comprehensive report
        run: |
          mkdir -p test-reports
          node scripts/run-all-tests.js
          
      - name: Upload comprehensive report
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: test-reports/ 